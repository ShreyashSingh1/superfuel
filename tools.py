"""
Math tools for the planner to use.
"""
import json

# Define the available math tools
def sum_numbers(a, b):
    """Add two numbers together"""
    return a + b

def subtract(a, b):
    """Subtract b from a"""
    return a - b

def multiply(a, b):
    """Multiply two numbers"""
    return a * b

def divide(a, b):
    """Divide a by b"""
    if b == 0:
        raise ValueError("Cannot divide by zero")
    return a / b

# Dictionary mapping tool names to functions
TOOLS = {
    "sum": sum_numbers,
    "subtract": subtract,
    "multiply": multiply,
    "divide": divide
}

def execute_tool(tool_name, parameters_json):
    """Execute a tool with the given parameters
    
    Args:
        tool_name (str): Name of the tool to execute
        parameters_json (str): JSON string of parameters
        
    Returns:
        The result of the tool execution
    """
    if tool_name not in TOOLS:
        raise ValueError(f"Unknown tool: {tool_name}")
    
    # Parse parameters
    parameters = json.loads(parameters_json)
    
    # Get the function
    tool_function = TOOLS[tool_name]
    
    # Execute the function with parameters
    return tool_function(**parameters)

def execute_plan(plan):
    """Execute a plan generated by the planner
    
    Args:
        plan (dict): Plan with tool calls
        
    Returns:
        list: Results of each tool call
    """
    results = []
    
    # Check if plan has tool_calls
    if "tool_calls" not in plan or not plan["tool_calls"]:
        return ["No tool calls to execute"]
    
    # Execute each tool call in the plan
    for tool_call in plan["tool_calls"]:
        tool_name = tool_call["tool_name"]
        parameters = tool_call["parameters"]
        
        try:
            result = execute_tool(tool_name, parameters)
            results.append({
                "tool": tool_name,
                "parameters": json.loads(parameters),
                "result": result,
                "status": "success"
            })
        except Exception as e:
            results.append({
                "tool": tool_name,
                "parameters": parameters,
                "error": str(e),
                "status": "error"
            })
    
    return results